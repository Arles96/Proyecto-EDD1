/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Dijkstra;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author arles96
 */
public class PanelDijkstra extends javax.swing.JPanel {
    
    // TODO: corregir en la conexion de un mismo nodo
    //atribute
    private File file;
    

    //Constructor
    public PanelDijkstra() {
        initComponents();
        configuration();
    }
    
    // administration methods
    
    private void visiblejDialog(JDialog view){
        view.setModal(true);
        view.pack();
        view.setLocationRelativeTo(this);
        view.setVisible(true);
    }
    
    private void closedJDialog (JDialog view){
        view.setVisible(false);
        view.dispose();
    }
    
    private void configuration(){
        nodeList1.setModel(canvasPanel.getModel());
        nodeList2.setModel(canvasPanel.getModel());
        nodeList3.setModel(canvasPanel.getModel());
        jDialogConnection.setResizable(false);
        jDialogConnection.setIconImage(new ImageIcon(getClass().getResource("../img/logo.jpg")).getImage());
        jDialogDijkstra.setResizable(false);
        jDialogDijkstra.setIconImage(new ImageIcon(getClass().getResource("../img/logo.jpg")).getImage());
        jDialogSize.setResizable(false);
        jDialogSize.setIconImage(new ImageIcon(getClass().getResource("../img/logo.jpg")).getImage());       
    }
    
    private void textDijkstra(Node[] list, Node node){
        String text = "Nodo seleccionado: Nodo " + node.toString() + "\n\n";
        for (int i = 0; i < canvasPanel.getGraph().getCounter(); i++) {
            if (list[i]!=null) {
                text += "Acumulador: " + list[i].getAccumulator() + " | Nodo " + 
                        list[i].toString() + "\n";
            }
        }
        dijkstraTextField.setText(text);
    }
    
    private boolean writeFile(){
        FileWriter fw;
        BufferedWriter bw;
         try {
            if (file==null) {
              fw = new FileWriter(file+".txt");  
            }else {
               fw = new FileWriter(file);
            }
            bw = new BufferedWriter(fw);
            for (int i = 0; i < canvasPanel.getGraph().getCounter(); i++) {
                if (canvasPanel.getGraph().getNode(i)!=null) {
                    for (int j = 0; j < canvasPanel.getGraph().getCounter(); j++) {
                        bw.write(canvasPanel.getGraph().getNode(i).getDistance(j)+ ",");
                    }
                    bw.newLine();
                }
            }
            bw.flush();
            return true;
        } catch (IOException e) {
            return false;
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialogSize = new javax.swing.JDialog();
        descriptionSizeLabel = new javax.swing.JLabel();
        sizeTextField = new javax.swing.JTextField();
        acceptSizeButton = new javax.swing.JButton();
        jDialogConnection = new javax.swing.JDialog();
        subtittleLabel1 = new javax.swing.JLabel();
        subtittleLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        nodeList1 = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        nodeList2 = new javax.swing.JList<>();
        connectionButton = new javax.swing.JButton();
        tittleConnectionLabel = new javax.swing.JLabel();
        distanceTextField = new javax.swing.JTextField();
        jDialogDijkstra = new javax.swing.JDialog();
        descriptionDijkstraLabel = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        nodeList3 = new javax.swing.JList<>();
        doDijkstraButton = new javax.swing.JButton();
        contentPanel = new javax.swing.JPanel();
        tittleLabel = new javax.swing.JLabel();
        addConnectionButton = new javax.swing.JButton();
        enableCanvasButton = new javax.swing.JButton();
        dijkstraButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        sizeButton = new javax.swing.JButton();
        openFileButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        dijkstraTextField = new javax.swing.JTextArea();
        dijkstraLabel = new javax.swing.JLabel();
        canvasPanel = new Dijkstra.CanvasPanel();

        descriptionSizeLabel.setText("Ingrese un nuevo numero maximo de Nodos");

        sizeTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        acceptSizeButton.setText("Aceptar");
        acceptSizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptSizeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialogSizeLayout = new javax.swing.GroupLayout(jDialogSize.getContentPane());
        jDialogSize.getContentPane().setLayout(jDialogSizeLayout);
        jDialogSizeLayout.setHorizontalGroup(
            jDialogSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialogSizeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialogSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(acceptSizeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(descriptionSizeLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
                    .addComponent(sizeTextField, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );
        jDialogSizeLayout.setVerticalGroup(
            jDialogSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogSizeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(descriptionSizeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sizeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(acceptSizeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        subtittleLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        subtittleLabel1.setText("Node 1");

        subtittleLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        subtittleLabel2.setText("Node 2");

        nodeList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jScrollPane2.setViewportView(nodeList1);

        nodeList2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jScrollPane3.setViewportView(nodeList2);

        connectionButton.setText("Conectar");
        connectionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectionButtonActionPerformed(evt);
            }
        });

        tittleConnectionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tittleConnectionLabel.setText("CONECTANDO NODOS");

        distanceTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jDialogConnectionLayout = new javax.swing.GroupLayout(jDialogConnection.getContentPane());
        jDialogConnection.getContentPane().setLayout(jDialogConnectionLayout);
        jDialogConnectionLayout.setHorizontalGroup(
            jDialogConnectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogConnectionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialogConnectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tittleConnectionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jDialogConnectionLayout.createSequentialGroup()
                        .addGroup(jDialogConnectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(subtittleLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jDialogConnectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(connectionButton, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                            .addComponent(distanceTextField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jDialogConnectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(subtittleLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 24, Short.MAX_VALUE))))
        );
        jDialogConnectionLayout.setVerticalGroup(
            jDialogConnectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialogConnectionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tittleConnectionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jDialogConnectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jDialogConnectionLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))
                    .addGroup(jDialogConnectionLayout.createSequentialGroup()
                        .addGroup(jDialogConnectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(subtittleLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(subtittleLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jDialogConnectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDialogConnectionLayout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(distanceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(connectionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jDialogConnectionLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(12, 12, 12))))
        );

        descriptionDijkstraLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        descriptionDijkstraLabel.setText("Seleccione un nodo de origen.");

        nodeList3.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jScrollPane4.setViewportView(nodeList3);

        doDijkstraButton.setText("Realizar");
        doDijkstraButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doDijkstraButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialogDijkstraLayout = new javax.swing.GroupLayout(jDialogDijkstra.getContentPane());
        jDialogDijkstra.getContentPane().setLayout(jDialogDijkstraLayout);
        jDialogDijkstraLayout.setHorizontalGroup(
            jDialogDijkstraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogDijkstraLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialogDijkstraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descriptionDijkstraLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                    .addGroup(jDialogDijkstraLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jDialogDijkstraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(doDijkstraButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jDialogDijkstraLayout.setVerticalGroup(
            jDialogDijkstraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogDijkstraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(descriptionDijkstraLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(doDijkstraButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        setBackground(new java.awt.Color(146, 146, 210));

        contentPanel.setBackground(new java.awt.Color(146, 146, 210));

        tittleLabel.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        tittleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tittleLabel.setText("MENOR COSTO UN ORIGEN / TODOS LOS DESTINOS (DIJKSTRA)");

        addConnectionButton.setText("Agregar conexión");
        addConnectionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addConnectionButtonActionPerformed(evt);
            }
        });

        enableCanvasButton.setText("Habilitar Lienzo");
        enableCanvasButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enableCanvasButtonActionPerformed(evt);
            }
        });

        dijkstraButton.setText("Dijkstra");
        dijkstraButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dijkstraButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Guardar");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        removeButton.setText("Eliminar");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        sizeButton.setText("Ingresar Tamaño");
        sizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sizeButtonActionPerformed(evt);
            }
        });

        openFileButton.setText("Abrir Archivo");
        openFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout contentPanelLayout = new javax.swing.GroupLayout(contentPanel);
        contentPanel.setLayout(contentPanelLayout);
        contentPanelLayout.setHorizontalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contentPanelLayout.createSequentialGroup()
                .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tittleLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, contentPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(openFileButton)
                        .addGap(18, 18, 18)
                        .addComponent(sizeButton)
                        .addGap(18, 18, 18)
                        .addComponent(addConnectionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(enableCanvasButton, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dijkstraButton, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)))
                .addGap(40, 40, 40))
        );
        contentPanelLayout.setVerticalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentPanelLayout.createSequentialGroup()
                .addComponent(tittleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enableCanvasButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addConnectionButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dijkstraButton)
                    .addComponent(saveButton)
                    .addComponent(removeButton)
                    .addComponent(sizeButton)
                    .addComponent(openFileButton))
                .addGap(18, 18, 18))
        );

        dijkstraTextField.setColumns(20);
        dijkstraTextField.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        dijkstraTextField.setRows(5);
        dijkstraTextField.setEnabled(false);
        jScrollPane1.setViewportView(dijkstraTextField);

        dijkstraLabel.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        dijkstraLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dijkstraLabel.setText("DIJKSTRA");

        javax.swing.GroupLayout canvasPanelLayout = new javax.swing.GroupLayout(canvasPanel);
        canvasPanel.setLayout(canvasPanelLayout);
        canvasPanelLayout.setHorizontalGroup(
            canvasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 885, Short.MAX_VALUE)
        );
        canvasPanelLayout.setVerticalGroup(
            canvasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dijkstraLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(canvasPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
            .addComponent(contentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(contentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dijkstraLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(canvasPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void sizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sizeButtonActionPerformed
        visiblejDialog(jDialogSize);
    }//GEN-LAST:event_sizeButtonActionPerformed

    private void acceptSizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptSizeButtonActionPerformed
        if (canvasPanel.getSizeGraph()==0) {
            int size;
            try {
                size = Integer.parseInt(sizeTextField.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Error, tiene que ser un numero.");
                return;
            }
            if (size<=0) {
                JOptionPane.showMessageDialog(this, "Error, el numero tiene que ser mayor que cero.");
            }else if(size>0 && canvasPanel.getSizeGraph()==0){
                canvasPanel.setSizeGraph(size);
                JOptionPane.showMessageDialog(this, "Se ha ingresado con exito.");
                sizeButton.setText("Modificar tamaño");
                closedJDialog(jDialogSize);
            }else {
                canvasPanel.setSizeGraph(size);
                JOptionPane.showMessageDialog(this, "Se ha modificado con exito.");
                closedJDialog(jDialogSize);
            }
        }else {
            int size;
            try {
                size = Integer.parseInt(sizeTextField.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Error, tiene que ser un numero.");
                return;
            }
            if (size<=canvasPanel.getSizeGraph()) {
                JOptionPane.showMessageDialog(this, "Error, el numero tiene que ser mayor del que ingreso antes.");
            }else {
                canvasPanel.setSizeGraph(size);
                JOptionPane.showMessageDialog(this, "Se ha modificado el numero maximo de nodos.");
                closedJDialog(jDialogSize);
            }
        }
    }//GEN-LAST:event_acceptSizeButtonActionPerformed

    private void enableCanvasButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableCanvasButtonActionPerformed
        if (!canvasPanel.isUseCanvas()) {
            canvasPanel.setUseCanvas(true);
            enableCanvasButton.setText("Deshabilitar Lienzo");
        }else {
            canvasPanel.setUseCanvas(false);
            enableCanvasButton.setText("Habilitar Lienzo");
        }
    }//GEN-LAST:event_enableCanvasButtonActionPerformed

    private void addConnectionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addConnectionButtonActionPerformed
        visiblejDialog(jDialogConnection);
    }//GEN-LAST:event_addConnectionButtonActionPerformed

    private void connectionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectionButtonActionPerformed
        if (canvasPanel.getSizeGraph()==0) {
            JOptionPane.showMessageDialog(this, "Ingrese primero un tamaño.");
            return;
        }
        if (canvasPanel.getCounter()==1) {
            JOptionPane.showMessageDialog(this, "No se ha agregado un nodo");
            return;
        }
        if (nodeList1.getSelectedIndex()>-1 && nodeList2.getSelectedIndex()>-1) {
            if (nodeList1.getSelectedIndex()==nodeList2.getSelectedIndex()) {
                JOptionPane.showMessageDialog(this, "Error, no se puede seleccionar ambos nodos");
            }else {
                int distance;
                try {
                    distance = Integer.parseInt(distanceTextField.getText());
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Error, ingrese un numero.");
                    return;
                }
                if (distance<=0) {
                    JOptionPane.showMessageDialog(this, "Error, la distancia tiene que ser mayor que cero.");
                }else {
                    Node node1 = (Node)canvasPanel.getModel().get(nodeList1.getSelectedIndex());
                    Node node2 = (Node)canvasPanel.getModel().get(nodeList2.getSelectedIndex());
                    if (canvasPanel.getGraph().existConnection(node1, node2)) {
                        JOptionPane.showMessageDialog(this, "Ya existe una conexión.");
                        return;
                    }
                    canvasPanel.getGraph().makeConnection(node1, node2, distance);
                    closedJDialog(jDialogConnection);
                    canvasPanel.repaint();
                    JOptionPane.showMessageDialog(this, "Se ha realizado una conexión");
                    distanceTextField.setText("");
                }
            }
        }else {
            JOptionPane.showMessageDialog(this, "Error, seleccione dos nodos");
        }
    }//GEN-LAST:event_connectionButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        if (canvasPanel.getSizeGraph()!=0 && canvasPanel.getCounter()==1) {
            JOptionPane.showMessageDialog(this, "No se encuentra ningun nodo en el lienzo.");
        }else {
            int number = canvasPanel.getCounter() - 2;
            Node node = (Node) canvasPanel.getModel().get(number);
            canvasPanel.getGraph().remove(node);
            canvasPanel.getModel().remove(number);
            canvasPanel.setCounter(canvasPanel.getCounter()-1);
            canvasPanel.repaint();
        }
    }//GEN-LAST:event_removeButtonActionPerformed

    private void dijkstraButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dijkstraButtonActionPerformed
        visiblejDialog(jDialogDijkstra);
    }//GEN-LAST:event_dijkstraButtonActionPerformed

    private void doDijkstraButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doDijkstraButtonActionPerformed
        if (nodeList3.getSelectedIndex()>-1) {
            Node node = (Node) canvasPanel.getModel().get(nodeList3.getSelectedIndex());            
            textDijkstra(canvasPanel.getGraph().dijkstra(node), node);
            closedJDialog(jDialogDijkstra);
            canvasPanel.repaint();
        }else {
            JOptionPane.showMessageDialog(this, "No seleccionaste ningún nodo de "
                + "de origen.");
        }
    }//GEN-LAST:event_doDijkstraButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        if (file==null) {
            JFileChooser jfc = new JFileChooser();
            int selection = jfc.showSaveDialog(this);
            if (selection==JFileChooser.APPROVE_OPTION) {
                file = jfc.getSelectedFile();
                if (writeFile()) {
                    JOptionPane.showMessageDialog(this, "Se ha guardado en un archivo de texto.");
                }else {
                    JOptionPane.showMessageDialog(this, "Ocurrio un error al guardar.");
                }
            }
        }else {
            if (writeFile()) {
                JOptionPane.showMessageDialog(this, "Se ha guardado en el archivo " + file.getName() + ".");
            }else {
                JOptionPane.showMessageDialog(this, "Error al momento de guardar en el archivo " + file.getName() + ".");
            }
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void openFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileButtonActionPerformed
        JFileChooser jfc = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("file", "txt");
        jfc.setFileFilter(filter);
        BufferedReader br;
        FileReader fr;
        int selection = jfc.showOpenDialog(this);
        ArrayList<String> lines = new ArrayList();
        if (selection == JFileChooser.APPROVE_OPTION) {
            file = jfc.getSelectedFile();
            try {
                fr = new FileReader(file);
                br = new BufferedReader(fr);
                String line;
                while ((line=br.readLine())!=null){
                    lines.add(line);
                }
                canvasPanel.setSizeGraph(lines.size());
                for (int i = 0; i < lines.size(); i++) {
                    Node node = new Node(i+1,lines.size(),canvasPanel);
                    canvasPanel.getGraph().insert(node);
                    canvasPanel.getModel().addElement(node);
                }
                for (int i = 0; i < lines.size(); i++) {
                    int counter = 0;
                    String accumulator = "";
                    for (int j = 0; j < lines.get(i).length(); j++) {
                        if (lines.get(i).charAt(j)==',') {
                            int distance = Integer.parseInt(accumulator);
                            if (distance!=0) {
                                canvasPanel.getGraph().makeConnection(canvasPanel.getGraph().getNode(i),
                                    canvasPanel.getGraph().getNode(counter), distance);
                            }
                            counter++;
                            accumulator = "";
                        }
                        if (lines.get(i).charAt(j)!=',' && lines.get(i).charAt(j)!=' ') {
                            accumulator += lines.get(i).charAt(j);
                        }
                    }
                }
                canvasPanel.setCounter(lines.size()+1);
                canvasPanel.repaint();
                sizeTextField.setText("" + lines.size());
                sizeButton.setText("Modificar Tamaño");
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "Error al abrir el archivo " + file.getName() + "." );
            }
        }
    }//GEN-LAST:event_openFileButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptSizeButton;
    private javax.swing.JButton addConnectionButton;
    private Dijkstra.CanvasPanel canvasPanel;
    private javax.swing.JButton connectionButton;
    private javax.swing.JPanel contentPanel;
    private javax.swing.JLabel descriptionDijkstraLabel;
    private javax.swing.JLabel descriptionSizeLabel;
    private javax.swing.JButton dijkstraButton;
    private javax.swing.JLabel dijkstraLabel;
    private javax.swing.JTextArea dijkstraTextField;
    private javax.swing.JTextField distanceTextField;
    private javax.swing.JButton doDijkstraButton;
    private javax.swing.JButton enableCanvasButton;
    private javax.swing.JDialog jDialogConnection;
    private javax.swing.JDialog jDialogDijkstra;
    private javax.swing.JDialog jDialogSize;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList<String> nodeList1;
    private javax.swing.JList<String> nodeList2;
    private javax.swing.JList<String> nodeList3;
    private javax.swing.JButton openFileButton;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton sizeButton;
    private javax.swing.JTextField sizeTextField;
    private javax.swing.JLabel subtittleLabel1;
    private javax.swing.JLabel subtittleLabel2;
    private javax.swing.JLabel tittleConnectionLabel;
    private javax.swing.JLabel tittleLabel;
    // End of variables declaration//GEN-END:variables
}
